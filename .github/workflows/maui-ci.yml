name: Build and Test .NET MAUI App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest  # Użycie maszyny wirtualnej macOS

    steps:
    # 1. Checkout repozytorium
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Instalacja .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'  # Ustawienie wersji .NET MAUI (możesz użyć wersji 7.0.x lub 8.0.x)

    # 3. Instalacja wymaganych workloadów .NET MAUI (iOS, MacCatalyst, Android)
    - name: Install .NET MAUI iOS, MacCatalyst, and Android workloads
      run: |
        dotnet workload install maui-ios  # Instalacja workloadu iOS
        dotnet workload install maccatalyst  # Instalacja workloadu MacCatalyst
        dotnet workload install android  # Instalacja workloadu Android

    # 4. Wypisanie wersji Xcode, dotnet i simctl dla diagnostyki
    - name: Diagnostic info
      run: |
        echo "Xcode version:"
        xcodebuild -version
        echo "dotnet version:"
        dotnet --version
        echo "Simulators:"
        xcrun simctl list devices

    # 5. Przywracanie zależności
    - name: Install dependencies
      run: |
        dotnet restore

    # 6. Budowanie aplikacji na iOS
    - name: Build the application for iOS
      run: |
        dotnet build FightClub.csproj -t:Build -f:net7.0-ios

    - name: Publish the app for iOS
      run: dotnet publish -c Release -f:net7.0-ios /p:Platform=iPhone /p:Configuration=Release

    - name: Create .ipa file for iOS
      run: |
        mkdir -p ${{ github.workspace }}/build/ios
        cp -r ./bin/Release/net7.0-ios/publish/* ${{ github.workspace }}/build/ios/
        cd ${{ github.workspace }}/build/ios/
        zip -r app.ipa *
    
    - name: Upload IPA as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: iOS-App
        path: ${{ github.workspace }}/build/ios/app.ipa